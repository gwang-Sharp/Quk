//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fisk.EnterpriseManageBusiness.ReportServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ConfigurationName="ReportServices.ReportExecutionServiceSoap")]
    public interface ReportExecutionServiceSoap {
        
        // CODEGEN: 消息 ListSecureMethodsRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tSecureMethods", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse ListSecureMethods(Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tSecureMethods", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse> ListSecureMethodsAsync(Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest request);
        
        // CODEGEN: 消息 LoadReportRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse LoadReport(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse> LoadReportAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest request);
        
        // CODEGEN: 消息 LoadReport3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response LoadReport3(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response> LoadReport3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request request);
        
        // CODEGEN: 消息 LoadReport2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response LoadReport2(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response> LoadReport2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionResponse LoadReportDefinition(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionResponse> LoadReportDefinitionAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Response LoadReportDefinition2(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Response> LoadReportDefinition2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Response LoadReportDefinition3(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Response> LoadReportDefinition3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request request);
        
        // CODEGEN: 消息 SetExecutionCredentialsRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse SetExecutionCredentials(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse> SetExecutionCredentialsAsync(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest request);
        
        // CODEGEN: 消息 SetExecutionCredentials2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response SetExecutionCredentials2(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response> SetExecutionCredentials2Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request request);
        
        // CODEGEN: 消息 SetExecutionCredentials3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response SetExecutionCredentials3(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response> SetExecutionCredentials3Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request request);
        
        // CODEGEN: 消息 SetExecutionParametersRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse SetExecutionParameters(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse> SetExecutionParametersAsync(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest request);
        
        // CODEGEN: 消息 SetExecutionParameters2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response SetExecutionParameters2(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response> SetExecutionParameters2Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request request);
        
        // CODEGEN: 消息 SetExecutionParameters3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response SetExecutionParameters3(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response> SetExecutionParameters3Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request request);
        
        // CODEGEN: 消息 ResetExecutionRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse ResetExecution(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse> ResetExecutionAsync(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest request);
        
        // CODEGEN: 消息 ResetExecution2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response ResetExecution2(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response> ResetExecution2Async(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request request);
        
        // CODEGEN: 消息 ResetExecution3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response ResetExecution3(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response> ResetExecution3Async(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.RenderResponse Render(Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.RenderResponse> RenderAsync(Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.Render2Response Render2(Fisk.EnterpriseManageBusiness.ReportServices.Render2Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Render2Response> Render2Async(Fisk.EnterpriseManageBusiness.ReportServices.Render2Request request);
        
        // CODEGEN: 消息 DeliverReportItemRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Del" +
            "iverReportItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse DeliverReportItem(Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Del" +
            "iverReportItem", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse> DeliverReportItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "derStream", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamResponse RenderStream(Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "derStream", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamResponse> RenderStreamAsync(Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest request);
        
        // CODEGEN: 消息 GetExecutionInfoRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse GetExecutionInfo(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse> GetExecutionInfoAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest request);
        
        // CODEGEN: 消息 GetExecutionInfo2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response GetExecutionInfo2(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response> GetExecutionInfo2Async(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request request);
        
        // CODEGEN: 消息 GetExecutionInfo3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response GetExecutionInfo3(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response> GetExecutionInfo3Async(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request request);
        
        // CODEGEN: 消息 GetDocumentMapRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "DocumentMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse GetDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "DocumentMap", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse> GetDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest request);
        
        // CODEGEN: 消息 LoadDrillthroughTargetRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse LoadDrillthroughTarget(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse> LoadDrillthroughTargetAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest request);
        
        // CODEGEN: 消息 LoadDrillthroughTarget2Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response LoadDrillthroughTarget2(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response> LoadDrillthroughTarget2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request request);
        
        // CODEGEN: 消息 LoadDrillthroughTarget3Request 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response LoadDrillthroughTarget3(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response> LoadDrillthroughTarget3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request request);
        
        // CODEGEN: 消息 ToggleItemRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Tog" +
            "gleItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse ToggleItem(Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Tog" +
            "gleItem", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse> ToggleItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest request);
        
        // CODEGEN: 消息 NavigateDocumentMapRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateDocumentMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse NavigateDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateDocumentMap", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse> NavigateDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateBookmark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkResponse NavigateBookmark(Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateBookmark", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkResponse> NavigateBookmarkAsync(Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest request);
        
        // CODEGEN: 消息 FindStringRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Fin" +
            "dString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse FindString(Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Fin" +
            "dString", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse> FindStringAsync(Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.SortResponse Sort(Fisk.EnterpriseManageBusiness.ReportServices.SortRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SortResponse> SortAsync(Fisk.EnterpriseManageBusiness.ReportServices.SortRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.Sort2Response Sort2(Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t2", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Sort2Response> Sort2Async(Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.Sort3Response Sort3(Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t3", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Sort3Response> Sort3Async(Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "RenderResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceResponse GetRenderResource(Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "RenderResource", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceResponse> GetRenderResourceAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest request);
        
        // CODEGEN: 消息 ListRenderingExtensionsRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tRenderingExtensions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse ListRenderingExtensions(Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tRenderingExtensions", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse> ListRenderingExtensionsAsync(Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest request);
        
        // CODEGEN: 消息 LogonUserResponse 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "onUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse LogonUser(Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "onUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse> LogonUserAsync(Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest request);
        
        // CODEGEN: 消息 LogoffResponse 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "off", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse Logoff(Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "off", ReplyAction="*")]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse> LogoffAsync(Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class TrustedUserHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private byte[] userTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
                this.RaisePropertyChanged("UserToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Extension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExtensionTypeEnum extensionTypeField;
        
        private string nameField;
        
        private string localizedNameField;
        
        private bool visibleField;
        
        private bool isModelGenerationSupportedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExtensionTypeEnum ExtensionType {
            get {
                return this.extensionTypeField;
            }
            set {
                this.extensionTypeField = value;
                this.RaisePropertyChanged("ExtensionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LocalizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("LocalizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
                this.RaisePropertyChanged("Visible");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsModelGenerationSupported {
            get {
                return this.isModelGenerationSupportedField;
            }
            set {
                this.isModelGenerationSupportedField = value;
                this.RaisePropertyChanged("IsModelGenerationSupported");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ExtensionTypeEnum {
        
        /// <remarks/>
        Delivery,
        
        /// <remarks/>
        Render,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DocumentMapNode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string labelField;
        
        private string uniqueNameField;
        
        private DocumentMapNode[] childrenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UniqueName {
            get {
                return this.uniqueNameField;
            }
            set {
                this.uniqueNameField = value;
                this.RaisePropertyChanged("UniqueName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public DocumentMapNode[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
                this.RaisePropertyChanged("Children");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExtensionSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string extensionField;
        
        private ParameterValueOrFieldReference[] parameterValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterFieldReference))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterValue))]
        public ParameterValueOrFieldReference[] ParameterValues {
            get {
                return this.parameterValuesField;
            }
            set {
                this.parameterValuesField = value;
                this.RaisePropertyChanged("ParameterValues");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterFieldReference : ParameterValueOrFieldReference {
        
        private string parameterNameField;
        
        private string fieldAliasField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
                this.RaisePropertyChanged("ParameterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FieldAlias {
            get {
                return this.fieldAliasField;
            }
            set {
                this.fieldAliasField = value;
                this.RaisePropertyChanged("FieldAlias");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterFieldReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValueOrFieldReference : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValue : ParameterValueOrFieldReference {
        
        private string nameField;
        
        private string valueField;
        
        private string labelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourceCredentials : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Warning : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string severityField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
                this.RaisePropertyChanged("Severity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
                this.RaisePropertyChanged("ObjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
                this.RaisePropertyChanged("ObjectType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string executionIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
                this.RaisePropertyChanged("ExecutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParametersGridCellDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int rowIndexField;
        
        private int columnsIndexField;
        
        private string parameterNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int RowIndex {
            get {
                return this.rowIndexField;
            }
            set {
                this.rowIndexField = value;
                this.RaisePropertyChanged("RowIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ColumnsIndex {
            get {
                return this.columnsIndexField;
            }
            set {
                this.columnsIndexField = value;
                this.RaisePropertyChanged("ColumnsIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
                this.RaisePropertyChanged("ParameterName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParametersGridLayoutDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int numberOfColumnsField;
        
        private int numberOfRowsField;
        
        private ParametersGridCellDefinition[] cellDefinitionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int NumberOfColumns {
            get {
                return this.numberOfColumnsField;
            }
            set {
                this.numberOfColumnsField = value;
                this.RaisePropertyChanged("NumberOfColumns");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int NumberOfRows {
            get {
                return this.numberOfRowsField;
            }
            set {
                this.numberOfRowsField = value;
                this.RaisePropertyChanged("NumberOfRows");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ParametersGridCellDefinition[] CellDefinitions {
            get {
                return this.cellDefinitionsField;
            }
            set {
                this.cellDefinitionsField = value;
                this.RaisePropertyChanged("CellDefinitions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportMargins : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double topField;
        
        private double bottomField;
        
        private double leftField;
        
        private double rightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("Top");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("Bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("Left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("Right");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportPaperSize : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double heightField;
        
        private double widthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class PageSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ReportPaperSize paperSizeField;
        
        private ReportMargins marginsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ReportPaperSize PaperSize {
            get {
                return this.paperSizeField;
            }
            set {
                this.paperSizeField = value;
                this.RaisePropertyChanged("PaperSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ReportMargins Margins {
            get {
                return this.marginsField;
            }
            set {
                this.marginsField = value;
                this.RaisePropertyChanged("Margins");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourcePrompt : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string dataSourceIDField;
        
        private string promptField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                this.dataSourceIDField = value;
                this.RaisePropertyChanged("DataSourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
                this.RaisePropertyChanged("Prompt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ValidValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private ParameterTypeEnum typeField;
        
        private bool typeFieldSpecified;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private bool multiValueField;
        
        private bool multiValueFieldSpecified;
        
        private bool queryParameterField;
        
        private bool queryParameterFieldSpecified;
        
        private string promptField;
        
        private bool promptUserField;
        
        private bool promptUserFieldSpecified;
        
        private string[] dependenciesField;
        
        private bool validValuesQueryBasedField;
        
        private bool validValuesQueryBasedFieldSpecified;
        
        private ValidValue[] validValuesField;
        
        private bool defaultValuesQueryBasedField;
        
        private bool defaultValuesQueryBasedFieldSpecified;
        
        private string[] defaultValuesField;
        
        private ParameterStateEnum stateField;
        
        private bool stateFieldSpecified;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ParameterTypeEnum Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
                this.RaisePropertyChanged("TypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Nullable {
            get {
                return this.nullableField;
            }
            set {
                this.nullableField = value;
                this.RaisePropertyChanged("Nullable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified {
            get {
                return this.nullableFieldSpecified;
            }
            set {
                this.nullableFieldSpecified = value;
                this.RaisePropertyChanged("NullableSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AllowBlank {
            get {
                return this.allowBlankField;
            }
            set {
                this.allowBlankField = value;
                this.RaisePropertyChanged("AllowBlank");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified {
            get {
                return this.allowBlankFieldSpecified;
            }
            set {
                this.allowBlankFieldSpecified = value;
                this.RaisePropertyChanged("AllowBlankSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool MultiValue {
            get {
                return this.multiValueField;
            }
            set {
                this.multiValueField = value;
                this.RaisePropertyChanged("MultiValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified {
            get {
                return this.multiValueFieldSpecified;
            }
            set {
                this.multiValueFieldSpecified = value;
                this.RaisePropertyChanged("MultiValueSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool QueryParameter {
            get {
                return this.queryParameterField;
            }
            set {
                this.queryParameterField = value;
                this.RaisePropertyChanged("QueryParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified {
            get {
                return this.queryParameterFieldSpecified;
            }
            set {
                this.queryParameterFieldSpecified = value;
                this.RaisePropertyChanged("QueryParameterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
                this.RaisePropertyChanged("Prompt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool PromptUser {
            get {
                return this.promptUserField;
            }
            set {
                this.promptUserField = value;
                this.RaisePropertyChanged("PromptUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified {
            get {
                return this.promptUserFieldSpecified;
            }
            set {
                this.promptUserFieldSpecified = value;
                this.RaisePropertyChanged("PromptUserSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
                this.RaisePropertyChanged("Dependencies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool ValidValuesQueryBased {
            get {
                return this.validValuesQueryBasedField;
            }
            set {
                this.validValuesQueryBasedField = value;
                this.RaisePropertyChanged("ValidValuesQueryBased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified {
            get {
                return this.validValuesQueryBasedFieldSpecified;
            }
            set {
                this.validValuesQueryBasedFieldSpecified = value;
                this.RaisePropertyChanged("ValidValuesQueryBasedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public ValidValue[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
                this.RaisePropertyChanged("ValidValues");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool DefaultValuesQueryBased {
            get {
                return this.defaultValuesQueryBasedField;
            }
            set {
                this.defaultValuesQueryBasedField = value;
                this.RaisePropertyChanged("DefaultValuesQueryBased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified {
            get {
                return this.defaultValuesQueryBasedFieldSpecified;
            }
            set {
                this.defaultValuesQueryBasedFieldSpecified = value;
                this.RaisePropertyChanged("DefaultValuesQueryBasedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues {
            get {
                return this.defaultValuesField;
            }
            set {
                this.defaultValuesField = value;
                this.RaisePropertyChanged("DefaultValues");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public ParameterStateEnum State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
                this.RaisePropertyChanged("StateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterTypeEnum {
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterStateEnum {
        
        /// <remarks/>
        HasValidValue,
        
        /// <remarks/>
        MissingValidValue,
        
        /// <remarks/>
        HasOutstandingDependencies,
        
        /// <remarks/>
        DynamicValuesUnavailable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecutionInfo2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecutionInfo3))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool hasSnapshotField;
        
        private bool needsProcessingField;
        
        private bool allowQueryExecutionField;
        
        private bool credentialsRequiredField;
        
        private bool parametersRequiredField;
        
        private System.DateTime expirationDateTimeField;
        
        private System.DateTime executionDateTimeField;
        
        private int numPagesField;
        
        private ReportParameter[] parametersField;
        
        private DataSourcePrompt[] dataSourcePromptsField;
        
        private bool hasDocumentMapField;
        
        private string executionIDField;
        
        private string reportPathField;
        
        private string historyIDField;
        
        private PageSettings reportPageSettingsField;
        
        private int autoRefreshIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool HasSnapshot {
            get {
                return this.hasSnapshotField;
            }
            set {
                this.hasSnapshotField = value;
                this.RaisePropertyChanged("HasSnapshot");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool NeedsProcessing {
            get {
                return this.needsProcessingField;
            }
            set {
                this.needsProcessingField = value;
                this.RaisePropertyChanged("NeedsProcessing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool AllowQueryExecution {
            get {
                return this.allowQueryExecutionField;
            }
            set {
                this.allowQueryExecutionField = value;
                this.RaisePropertyChanged("AllowQueryExecution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool CredentialsRequired {
            get {
                return this.credentialsRequiredField;
            }
            set {
                this.credentialsRequiredField = value;
                this.RaisePropertyChanged("CredentialsRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool ParametersRequired {
            get {
                return this.parametersRequiredField;
            }
            set {
                this.parametersRequiredField = value;
                this.RaisePropertyChanged("ParametersRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ExpirationDateTime {
            get {
                return this.expirationDateTimeField;
            }
            set {
                this.expirationDateTimeField = value;
                this.RaisePropertyChanged("ExpirationDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime ExecutionDateTime {
            get {
                return this.executionDateTimeField;
            }
            set {
                this.executionDateTimeField = value;
                this.RaisePropertyChanged("ExecutionDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int NumPages {
            get {
                return this.numPagesField;
            }
            set {
                this.numPagesField = value;
                this.RaisePropertyChanged("NumPages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public ReportParameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
                this.RaisePropertyChanged("Parameters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public DataSourcePrompt[] DataSourcePrompts {
            get {
                return this.dataSourcePromptsField;
            }
            set {
                this.dataSourcePromptsField = value;
                this.RaisePropertyChanged("DataSourcePrompts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool HasDocumentMap {
            get {
                return this.hasDocumentMapField;
            }
            set {
                this.hasDocumentMapField = value;
                this.RaisePropertyChanged("HasDocumentMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
                this.RaisePropertyChanged("ExecutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ReportPath {
            get {
                return this.reportPathField;
            }
            set {
                this.reportPathField = value;
                this.RaisePropertyChanged("ReportPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string HistoryID {
            get {
                return this.historyIDField;
            }
            set {
                this.historyIDField = value;
                this.RaisePropertyChanged("HistoryID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public PageSettings ReportPageSettings {
            get {
                return this.reportPageSettingsField;
            }
            set {
                this.reportPageSettingsField = value;
                this.RaisePropertyChanged("ReportPageSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int AutoRefreshInterval {
            get {
                return this.autoRefreshIntervalField;
            }
            set {
                this.autoRefreshIntervalField = value;
                this.RaisePropertyChanged("AutoRefreshInterval");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecutionInfo3))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo2 : ExecutionInfo {
        
        private PageCountMode pageCountModeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PageCountMode PageCountMode {
            get {
                return this.pageCountModeField;
            }
            set {
                this.pageCountModeField = value;
                this.RaisePropertyChanged("PageCountMode");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum PageCountMode {
        
        /// <remarks/>
        Actual,
        
        /// <remarks/>
        Estimate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo3 : ExecutionInfo2 {
        
        private ParametersGridLayoutDefinition parametersLayoutField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ParametersGridLayoutDefinition ParametersLayout {
            get {
                return this.parametersLayoutField;
            }
            set {
                this.parametersLayoutField = value;
                this.RaisePropertyChanged("ParametersLayout");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ServerInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string reportServerVersionNumberField;
        
        private string reportServerEditionField;
        
        private string reportServerVersionField;
        
        private string reportServerDateTimeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ReportServerVersionNumber {
            get {
                return this.reportServerVersionNumberField;
            }
            set {
                this.reportServerVersionNumberField = value;
                this.RaisePropertyChanged("ReportServerVersionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReportServerEdition {
            get {
                return this.reportServerEditionField;
            }
            set {
                this.reportServerEditionField = value;
                this.RaisePropertyChanged("ReportServerEdition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReportServerVersion {
            get {
                return this.reportServerVersionField;
            }
            set {
                this.reportServerVersionField = value;
                this.RaisePropertyChanged("ReportServerVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReportServerDateTime {
            get {
                return this.reportServerDateTimeField;
            }
            set {
                this.reportServerDateTimeField = value;
                this.RaisePropertyChanged("ReportServerDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecureMethods", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListSecureMethodsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public ListSecureMethodsRequest() {
        }
        
        public ListSecureMethodsRequest(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecureMethodsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListSecureMethodsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string[] ListSecureMethodsResult;
        
        public ListSecureMethodsResponse() {
        }
        
        public ListSecureMethodsResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, string[] ListSecureMethodsResult) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListSecureMethodsResult = ListSecureMethodsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string HistoryID;
        
        public LoadReportRequest() {
        }
        
        public LoadReportRequest(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        public LoadReportResponse() {
        }
        
        public LoadReportResponse(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string HistoryID;
        
        public LoadReport3Request() {
        }
        
        public LoadReport3Request(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        public LoadReport3Response() {
        }
        
        public LoadReport3Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string HistoryID;
        
        public LoadReport2Request() {
        }
        
        public LoadReport2Request(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        public LoadReport2Response() {
        }
        
        public LoadReport2Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public LoadReportDefinitionRequest() {
        }
        
        public LoadReportDefinitionRequest(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinitionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings;
        
        public LoadReportDefinitionResponse() {
        }
        
        public LoadReportDefinitionResponse(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo, Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
            this.warnings = warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public LoadReportDefinition2Request() {
        }
        
        public LoadReportDefinition2Request(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings;
        
        public LoadReportDefinition2Response() {
        }
        
        public LoadReportDefinition2Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo, Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
            this.warnings = warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public LoadReportDefinition3Request() {
        }
        
        public LoadReportDefinition3Request(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings;
        
        public LoadReportDefinition3Response() {
        }
        
        public LoadReportDefinition3Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo, Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
            this.warnings = warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentialsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials;
        
        public SetExecutionCredentialsRequest() {
        }
        
        public SetExecutionCredentialsRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentialsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentialsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        public SetExecutionCredentialsResponse() {
        }
        
        public SetExecutionCredentialsResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials;
        
        public SetExecutionCredentials2Request() {
        }
        
        public SetExecutionCredentials2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        public SetExecutionCredentials2Response() {
        }
        
        public SetExecutionCredentials2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials;
        
        public SetExecutionCredentials3Request() {
        }
        
        public SetExecutionCredentials3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        public SetExecutionCredentials3Response() {
        }
        
        public SetExecutionCredentials3Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParametersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ParameterLanguage;
        
        public SetExecutionParametersRequest() {
        }
        
        public SetExecutionParametersRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Parameters = Parameters;
            this.ParameterLanguage = ParameterLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParametersResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParametersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        public SetExecutionParametersResponse() {
        }
        
        public SetExecutionParametersResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ParameterLanguage;
        
        public SetExecutionParameters2Request() {
        }
        
        public SetExecutionParameters2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Parameters = Parameters;
            this.ParameterLanguage = ParameterLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        public SetExecutionParameters2Response() {
        }
        
        public SetExecutionParameters2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ParameterLanguage;
        
        public SetExecutionParameters3Request() {
        }
        
        public SetExecutionParameters3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Parameters = Parameters;
            this.ParameterLanguage = ParameterLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        public SetExecutionParameters3Response() {
        }
        
        public SetExecutionParameters3Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecutionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public ResetExecutionRequest() {
        }
        
        public ResetExecutionRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecutionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecutionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        public ResetExecutionResponse() {
        }
        
        public ResetExecutionResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public ResetExecution2Request() {
        }
        
        public ResetExecution2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        public ResetExecution2Response() {
        }
        
        public ResetExecution2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public ResetExecution3Request() {
        }
        
        public ResetExecution3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        public ResetExecution3Response() {
        }
        
        public ResetExecution3Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        public RenderRequest() {
        }
        
        public RenderRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=4)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=5)]
        public string[] StreamIds;
        
        public RenderResponse() {
        }
        
        public RenderResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, byte[] Result, string Extension, string MimeType, string Encoding, Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings, string[] StreamIds) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Extension = Extension;
            this.MimeType = MimeType;
            this.Encoding = Encoding;
            this.Warnings = Warnings;
            this.StreamIds = StreamIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Render2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode;
        
        public Render2Request() {
        }
        
        public Render2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
            this.PaginationMode = PaginationMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Render2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=4)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=5)]
        public string[] StreamIds;
        
        public Render2Response() {
        }
        
        public Render2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, byte[] Result, string Extension, string MimeType, string Encoding, Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings, string[] StreamIds) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Extension = Extension;
            this.MimeType = MimeType;
            this.Encoding = Encoding;
            this.Warnings = Warnings;
            this.StreamIds = StreamIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeliverReportItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class DeliverReportItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExtensionSettings ExtensionSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=4)]
        public string EventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=5)]
        public string MatchData;
        
        public DeliverReportItemRequest() {
        }
        
        public DeliverReportItemRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, Fisk.EnterpriseManageBusiness.ReportServices.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
            this.ExtensionSettings = ExtensionSettings;
            this.Description = Description;
            this.EventType = EventType;
            this.MatchData = MatchData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeliverReportItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class DeliverReportItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        public DeliverReportItemResponse() {
        }
        
        public DeliverReportItemResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader) {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderStream", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderStreamRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string StreamID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string DeviceInfo;
        
        public RenderStreamRequest() {
        }
        
        public RenderStreamRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string StreamID, string DeviceInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.StreamID = StreamID;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderStreamResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderStreamResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        public RenderStreamResponse() {
        }
        
        public RenderStreamResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, byte[] Result, string Encoding, string MimeType) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Encoding = Encoding;
            this.MimeType = MimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public GetExecutionInfoRequest() {
        }
        
        public GetExecutionInfoRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfoResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo;
        
        public GetExecutionInfoResponse() {
        }
        
        public GetExecutionInfoResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public GetExecutionInfo2Request() {
        }
        
        public GetExecutionInfo2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo;
        
        public GetExecutionInfo2Response() {
        }
        
        public GetExecutionInfo2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public GetExecutionInfo3Request() {
        }
        
        public GetExecutionInfo3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo;
        
        public GetExecutionInfo3Response() {
        }
        
        public GetExecutionInfo3Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentMap", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetDocumentMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public GetDocumentMapRequest() {
        }
        
        public GetDocumentMapRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentMapResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetDocumentMapResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.DocumentMapNode result;
        
        public GetDocumentMapResponse() {
        }
        
        public GetDocumentMapResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.DocumentMapNode result) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTargetRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DrillthroughID;
        
        public LoadDrillthroughTargetRequest() {
        }
        
        public LoadDrillthroughTargetRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DrillthroughID = DrillthroughID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTargetResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTargetResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo ExecutionInfo;
        
        public LoadDrillthroughTargetResponse() {
        }
        
        public LoadDrillthroughTargetResponse(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo ExecutionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DrillthroughID;
        
        public LoadDrillthroughTarget2Request() {
        }
        
        public LoadDrillthroughTarget2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DrillthroughID = DrillthroughID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo;
        
        public LoadDrillthroughTarget2Response() {
        }
        
        public LoadDrillthroughTarget2Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DrillthroughID;
        
        public LoadDrillthroughTarget3Request() {
        }
        
        public LoadDrillthroughTarget3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DrillthroughID = DrillthroughID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo;
        
        public LoadDrillthroughTarget3Response() {
        }
        
        public LoadDrillthroughTarget3Response(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ToggleItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string ToggleID;
        
        public ToggleItemRequest() {
        }
        
        public ToggleItemRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string ToggleID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.ToggleID = ToggleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ToggleItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public bool Found;
        
        public ToggleItemResponse() {
        }
        
        public ToggleItemResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, bool Found) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Found = Found;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateDocumentMap", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateDocumentMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DocMapID;
        
        public NavigateDocumentMapRequest() {
        }
        
        public NavigateDocumentMapRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DocMapID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DocMapID = DocMapID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateDocumentMapResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateDocumentMapResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        public NavigateDocumentMapResponse() {
        }
        
        public NavigateDocumentMapResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateBookmark", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateBookmarkRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string BookmarkID;
        
        public NavigateBookmarkRequest() {
        }
        
        public NavigateBookmarkRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string BookmarkID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.BookmarkID = BookmarkID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateBookmarkResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateBookmarkResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string UniqueName;
        
        public NavigateBookmarkResponse() {
        }
        
        public NavigateBookmarkResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber, string UniqueName) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.UniqueName = UniqueName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindString", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class FindStringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int StartPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public int EndPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string FindValue;
        
        public FindStringRequest() {
        }
        
        public FindStringRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.StartPage = StartPage;
            this.EndPage = EndPage;
            this.FindValue = FindValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindStringResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class FindStringResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        public FindStringResponse() {
        }
        
        public FindStringResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum SortDirectionEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SortRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string SortItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public bool Clear;
        
        public SortRequest() {
        }
        
        public SortRequest(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.SortItem = SortItem;
            this.Direction = Direction;
            this.Clear = Clear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SortResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SortResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ReportItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public int NumPages;
        
        public SortResponse() {
        }
        
        public SortResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber, string ReportItem, int NumPages) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.ReportItem = ReportItem;
            this.NumPages = NumPages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string SortItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public bool Clear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode;
        
        public Sort2Request() {
        }
        
        public Sort2Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.SortItem = SortItem;
            this.Direction = Direction;
            this.Clear = Clear;
            this.PaginationMode = PaginationMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ReportItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo;
        
        public Sort2Response() {
        }
        
        public Sort2Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber, string ReportItem, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.ReportItem = ReportItem;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort3", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort3Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string SortItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public bool Clear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode;
        
        public Sort3Request() {
        }
        
        public Sort3Request(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.SortItem = SortItem;
            this.Direction = Direction;
            this.Clear = Clear;
            this.PaginationMode = PaginationMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort3Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort3Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ReportItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo;
        
        public Sort3Response() {
        }
        
        public Sort3Response(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, int PageNumber, string ReportItem, Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.ReportItem = ReportItem;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRenderResource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetRenderResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        public GetRenderResourceRequest() {
        }
        
        public GetRenderResourceRequest(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRenderResourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetRenderResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string MimeType;
        
        public GetRenderResourceResponse() {
        }
        
        public GetRenderResourceResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, byte[] Result, string MimeType) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.MimeType = MimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRenderingExtensions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListRenderingExtensionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader;
        
        public ListRenderingExtensionsRequest() {
        }
        
        public ListRenderingExtensionsRequest(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRenderingExtensionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListRenderingExtensionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public Fisk.EnterpriseManageBusiness.ReportServices.Extension[] Extensions;
        
        public ListRenderingExtensionsResponse() {
        }
        
        public ListRenderingExtensionsResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, Fisk.EnterpriseManageBusiness.ReportServices.Extension[] Extensions) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Extensions = Extensions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUser", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogonUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string authority;
        
        public LogonUserRequest() {
        }
        
        public LogonUserRequest(string userName, string password, string authority) {
            this.userName = userName;
            this.password = password;
            this.authority = authority;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUserResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogonUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        public LogonUserResponse() {
        }
        
        public LogonUserResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader) {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logoff", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogoffRequest {
        
        public LogoffRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogoffResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader;
        
        public LogoffResponse() {
        }
        
        public LogoffResponse(Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader) {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReportExecutionServiceSoapChannel : Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportExecutionServiceSoapClient : System.ServiceModel.ClientBase<Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap>, Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap {
        
        public ReportExecutionServiceSoapClient() {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportExecutionServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ListSecureMethods(Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest request) {
            return base.Channel.ListSecureMethods(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ListSecureMethods(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out string[] ListSecureMethodsResult) {
            Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ListSecureMethods(inValue);
            ListSecureMethodsResult = retVal.ListSecureMethodsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ListSecureMethodsAsync(Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest request) {
            return base.Channel.ListSecureMethodsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsResponse> ListSecureMethodsAsync(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ListSecureMethodsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ListSecureMethodsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReport(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest request) {
            return base.Channel.LoadReport(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReport(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReport(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            return retVal.ExecutionHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReportAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest request) {
            return base.Channel.LoadReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportResponse> LoadReportAsync(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReportRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReport3(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request request) {
            return base.Channel.LoadReport3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReport3(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReport3(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            return retVal.ExecutionHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReport3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request request) {
            return base.Channel.LoadReport3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Response> LoadReport3Async(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReport3Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReport3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReport2(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request request) {
            return base.Channel.LoadReport2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReport2(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReport2(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            return retVal.ExecutionHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReport2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request request) {
            return base.Channel.LoadReport2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Response> LoadReport2Async(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReport2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReport2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReportDefinition(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest request) {
            return base.Channel.LoadReportDefinition(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReportDefinition(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo, out Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Definition = Definition;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReportDefinition(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            warnings = retVal.warnings;
            return retVal.ExecutionHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionResponse> LoadReportDefinitionAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinitionRequest request) {
            return base.Channel.LoadReportDefinitionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReportDefinition2(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request request) {
            return base.Channel.LoadReportDefinition2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReportDefinition2(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo, out Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Definition = Definition;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReportDefinition2(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            warnings = retVal.warnings;
            return retVal.ExecutionHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Response> LoadReportDefinition2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition2Request request) {
            return base.Channel.LoadReportDefinition2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadReportDefinition3(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request request) {
            return base.Channel.LoadReportDefinition3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader LoadReportDefinition3(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, byte[] Definition, out Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ServerInfoHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo, out Fisk.EnterpriseManageBusiness.ReportServices.Warning[] warnings) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Definition = Definition;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadReportDefinition3(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            warnings = retVal.warnings;
            return retVal.ExecutionHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Response> LoadReportDefinition3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadReportDefinition3Request request) {
            return base.Channel.LoadReportDefinition3Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentials(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest request) {
            return base.Channel.SetExecutionCredentials(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionCredentials(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentials(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentialsAsync(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest request) {
            return base.Channel.SetExecutionCredentialsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsResponse> SetExecutionCredentialsAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentialsRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentialsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentials2(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request request) {
            return base.Channel.SetExecutionCredentials2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionCredentials2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentials2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentials2Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request request) {
            return base.Channel.SetExecutionCredentials2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Response> SetExecutionCredentials2Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentials2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentials3(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request request) {
            return base.Channel.SetExecutionCredentials3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionCredentials3(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentials3(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionCredentials3Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request request) {
            return base.Channel.SetExecutionCredentials3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Response> SetExecutionCredentials3Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.DataSourceCredentials[] Credentials) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionCredentials3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionCredentials3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParameters(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest request) {
            return base.Channel.SetExecutionParameters(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionParameters(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParameters(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParametersAsync(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest request) {
            return base.Channel.SetExecutionParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersResponse> SetExecutionParametersAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParametersRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParametersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParameters2(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request request) {
            return base.Channel.SetExecutionParameters2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionParameters2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParameters2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParameters2Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request request) {
            return base.Channel.SetExecutionParameters2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Response> SetExecutionParameters2Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParameters2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParameters3(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request request) {
            return base.Channel.SetExecutionParameters3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader SetExecutionParameters3(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParameters3(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.SetExecutionParameters3Async(Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request request) {
            return base.Channel.SetExecutionParameters3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Response> SetExecutionParameters3Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, Fisk.EnterpriseManageBusiness.ReportServices.ParameterValue[] Parameters, string ParameterLanguage) {
            Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SetExecutionParameters3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).SetExecutionParameters3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecution(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest request) {
            return base.Channel.ResetExecution(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ResetExecution(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecution(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecutionAsync(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest request) {
            return base.Channel.ResetExecutionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionResponse> ResetExecutionAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecutionRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecutionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecution2(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request request) {
            return base.Channel.ResetExecution2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ResetExecution2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecution2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecution2Async(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request request) {
            return base.Channel.ResetExecution2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Response> ResetExecution2Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecution2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecution3(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request request) {
            return base.Channel.ResetExecution3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ResetExecution3(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecution3(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ResetExecution3Async(Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request request) {
            return base.Channel.ResetExecution3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Response> ResetExecution3Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ResetExecution3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ResetExecution3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.RenderResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Render(Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest request) {
            return base.Channel.Render(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Render(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, out byte[] Result, out string Extension, out string MimeType, out string Encoding, out Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings, out string[] StreamIds) {
            Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            Fisk.EnterpriseManageBusiness.ReportServices.RenderResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Render(inValue);
            Result = retVal.Result;
            Extension = retVal.Extension;
            MimeType = retVal.MimeType;
            Encoding = retVal.Encoding;
            Warnings = retVal.Warnings;
            StreamIds = retVal.StreamIds;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.RenderResponse> RenderAsync(Fisk.EnterpriseManageBusiness.ReportServices.RenderRequest request) {
            return base.Channel.RenderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.Render2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Render2(Fisk.EnterpriseManageBusiness.ReportServices.Render2Request request) {
            return base.Channel.Render2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Render2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode, out byte[] Result, out string Extension, out string MimeType, out string Encoding, out Fisk.EnterpriseManageBusiness.ReportServices.Warning[] Warnings, out string[] StreamIds) {
            Fisk.EnterpriseManageBusiness.ReportServices.Render2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.Render2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            inValue.PaginationMode = PaginationMode;
            Fisk.EnterpriseManageBusiness.ReportServices.Render2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Render2(inValue);
            Result = retVal.Result;
            Extension = retVal.Extension;
            MimeType = retVal.MimeType;
            Encoding = retVal.Encoding;
            Warnings = retVal.Warnings;
            StreamIds = retVal.StreamIds;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Render2Response> Render2Async(Fisk.EnterpriseManageBusiness.ReportServices.Render2Request request) {
            return base.Channel.Render2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.DeliverReportItem(Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest request) {
            return base.Channel.DeliverReportItem(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader DeliverReportItem(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, Fisk.EnterpriseManageBusiness.ReportServices.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData) {
            Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).DeliverReportItem(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.DeliverReportItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest request) {
            return base.Channel.DeliverReportItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemResponse> DeliverReportItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, Fisk.EnterpriseManageBusiness.ReportServices.ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData) {
            Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.DeliverReportItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            inValue.ExtensionSettings = ExtensionSettings;
            inValue.Description = Description;
            inValue.EventType = EventType;
            inValue.MatchData = MatchData;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).DeliverReportItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.RenderStream(Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest request) {
            return base.Channel.RenderStream(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader RenderStream(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string StreamID, string DeviceInfo, out byte[] Result, out string Encoding, out string MimeType) {
            Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.StreamID = StreamID;
            inValue.DeviceInfo = DeviceInfo;
            Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).RenderStream(inValue);
            Result = retVal.Result;
            Encoding = retVal.Encoding;
            MimeType = retVal.MimeType;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamResponse> RenderStreamAsync(Fisk.EnterpriseManageBusiness.ReportServices.RenderStreamRequest request) {
            return base.Channel.RenderStreamAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfo(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest request) {
            return base.Channel.GetExecutionInfo(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader GetExecutionInfo(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfo(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfoAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest request) {
            return base.Channel.GetExecutionInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoResponse> GetExecutionInfoAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfoRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfo2(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request request) {
            return base.Channel.GetExecutionInfo2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader GetExecutionInfo2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfo2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfo2Async(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request request) {
            return base.Channel.GetExecutionInfo2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Response> GetExecutionInfo2Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfo2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfo3(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request request) {
            return base.Channel.GetExecutionInfo3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader GetExecutionInfo3(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 executionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfo3(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetExecutionInfo3Async(Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request request) {
            return base.Channel.GetExecutionInfo3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Response> GetExecutionInfo3Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetExecutionInfo3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetExecutionInfo3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest request) {
            return base.Channel.GetDocumentMap(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader GetDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.DocumentMapNode result) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetDocumentMap(inValue);
            result = retVal.result;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest request) {
            return base.Channel.GetDocumentMapAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapResponse> GetDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetDocumentMapAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTarget(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest request) {
            return base.Channel.LoadDrillthroughTarget(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader LoadDrillthroughTarget(ref Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo ExecutionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget(inValue);
            ExecutionHeader = retVal.ExecutionHeader;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTargetAsync(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest request) {
            return base.Channel.LoadDrillthroughTargetAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetResponse> LoadDrillthroughTargetAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTargetRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTargetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTarget2(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request request) {
            return base.Channel.LoadDrillthroughTarget2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader LoadDrillthroughTarget2(ref Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget2(inValue);
            ExecutionHeader = retVal.ExecutionHeader;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTarget2Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request request) {
            return base.Channel.LoadDrillthroughTarget2Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Response> LoadDrillthroughTarget2Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTarget3(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request request) {
            return base.Channel.LoadDrillthroughTarget3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader LoadDrillthroughTarget3(ref Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget3(inValue);
            ExecutionHeader = retVal.ExecutionHeader;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LoadDrillthroughTarget3Async(Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request request) {
            return base.Channel.LoadDrillthroughTarget3Async(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Response> LoadDrillthroughTarget3Async(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LoadDrillthroughTarget3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ToggleItem(Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest request) {
            return base.Channel.ToggleItem(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ToggleItem(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string ToggleID, out bool Found) {
            Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ToggleID = ToggleID;
            Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ToggleItem(inValue);
            Found = retVal.Found;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ToggleItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest request) {
            return base.Channel.ToggleItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemResponse> ToggleItemAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string ToggleID) {
            Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ToggleItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ToggleID = ToggleID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ToggleItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.NavigateDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest request) {
            return base.Channel.NavigateDocumentMap(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader NavigateDocumentMap(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DocMapID, out int PageNumber) {
            Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DocMapID = DocMapID;
            Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).NavigateDocumentMap(inValue);
            PageNumber = retVal.PageNumber;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.NavigateDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest request) {
            return base.Channel.NavigateDocumentMapAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapResponse> NavigateDocumentMapAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string DocMapID) {
            Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.NavigateDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DocMapID = DocMapID;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).NavigateDocumentMapAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.NavigateBookmark(Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest request) {
            return base.Channel.NavigateBookmark(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader NavigateBookmark(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string BookmarkID, out int PageNumber, out string UniqueName) {
            Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.BookmarkID = BookmarkID;
            Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).NavigateBookmark(inValue);
            PageNumber = retVal.PageNumber;
            UniqueName = retVal.UniqueName;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkResponse> NavigateBookmarkAsync(Fisk.EnterpriseManageBusiness.ReportServices.NavigateBookmarkRequest request) {
            return base.Channel.NavigateBookmarkAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.FindString(Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest request) {
            return base.Channel.FindString(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader FindString(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue, out int PageNumber) {
            Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.StartPage = StartPage;
            inValue.EndPage = EndPage;
            inValue.FindValue = FindValue;
            Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).FindString(inValue);
            PageNumber = retVal.PageNumber;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.FindStringAsync(Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest request) {
            return base.Channel.FindStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.FindStringResponse> FindStringAsync(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue) {
            Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.FindStringRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.StartPage = StartPage;
            inValue.EndPage = EndPage;
            inValue.FindValue = FindValue;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).FindStringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.SortResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Sort(Fisk.EnterpriseManageBusiness.ReportServices.SortRequest request) {
            return base.Channel.Sort(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Sort(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear, out int PageNumber, out string ReportItem, out int NumPages) {
            Fisk.EnterpriseManageBusiness.ReportServices.SortRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.SortRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SortItem = SortItem;
            inValue.Direction = Direction;
            inValue.Clear = Clear;
            Fisk.EnterpriseManageBusiness.ReportServices.SortResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Sort(inValue);
            PageNumber = retVal.PageNumber;
            ReportItem = retVal.ReportItem;
            NumPages = retVal.NumPages;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.SortResponse> SortAsync(Fisk.EnterpriseManageBusiness.ReportServices.SortRequest request) {
            return base.Channel.SortAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.Sort2Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Sort2(Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request request) {
            return base.Channel.Sort2(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Sort2(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode, out int PageNumber, out string ReportItem, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo2 ExecutionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SortItem = SortItem;
            inValue.Direction = Direction;
            inValue.Clear = Clear;
            inValue.PaginationMode = PaginationMode;
            Fisk.EnterpriseManageBusiness.ReportServices.Sort2Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Sort2(inValue);
            PageNumber = retVal.PageNumber;
            ReportItem = retVal.ReportItem;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Sort2Response> Sort2Async(Fisk.EnterpriseManageBusiness.ReportServices.Sort2Request request) {
            return base.Channel.Sort2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.Sort3Response Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Sort3(Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request request) {
            return base.Channel.Sort3(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Sort3(Fisk.EnterpriseManageBusiness.ReportServices.ExecutionHeader ExecutionHeader, Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string SortItem, Fisk.EnterpriseManageBusiness.ReportServices.SortDirectionEnum Direction, bool Clear, Fisk.EnterpriseManageBusiness.ReportServices.PageCountMode PaginationMode, out int PageNumber, out string ReportItem, out Fisk.EnterpriseManageBusiness.ReportServices.ExecutionInfo3 ExecutionInfo) {
            Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request inValue = new Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SortItem = SortItem;
            inValue.Direction = Direction;
            inValue.Clear = Clear;
            inValue.PaginationMode = PaginationMode;
            Fisk.EnterpriseManageBusiness.ReportServices.Sort3Response retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Sort3(inValue);
            PageNumber = retVal.PageNumber;
            ReportItem = retVal.ReportItem;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.Sort3Response> Sort3Async(Fisk.EnterpriseManageBusiness.ReportServices.Sort3Request request) {
            return base.Channel.Sort3Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.GetRenderResource(Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest request) {
            return base.Channel.GetRenderResource(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader GetRenderResource(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, out byte[] Result, out string MimeType) {
            Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).GetRenderResource(inValue);
            Result = retVal.Result;
            MimeType = retVal.MimeType;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceResponse> GetRenderResourceAsync(Fisk.EnterpriseManageBusiness.ReportServices.GetRenderResourceRequest request) {
            return base.Channel.GetRenderResourceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ListRenderingExtensions(Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest request) {
            return base.Channel.ListRenderingExtensions(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader ListRenderingExtensions(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader, out Fisk.EnterpriseManageBusiness.ReportServices.Extension[] Extensions) {
            Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ListRenderingExtensions(inValue);
            Extensions = retVal.Extensions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.ListRenderingExtensionsAsync(Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest request) {
            return base.Channel.ListRenderingExtensionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsResponse> ListRenderingExtensionsAsync(Fisk.EnterpriseManageBusiness.ReportServices.TrustedUserHeader TrustedUserHeader) {
            Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.ListRenderingExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).ListRenderingExtensionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LogonUser(Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest request) {
            return base.Channel.LogonUser(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader LogonUser(string userName, string password, string authority) {
            Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LogonUser(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LogonUserAsync(Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest request) {
            return base.Channel.LogonUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogonUserResponse> LogonUserAsync(string userName, string password, string authority) {
            Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LogonUserRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LogonUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.Logoff(Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest request) {
            return base.Channel.Logoff(request);
        }
        
        public Fisk.EnterpriseManageBusiness.ReportServices.ServerInfoHeader Logoff() {
            Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest();
            Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse retVal = ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).Logoff(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse> Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap.LogoffAsync(Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest request) {
            return base.Channel.LogoffAsync(request);
        }
        
        public System.Threading.Tasks.Task<Fisk.EnterpriseManageBusiness.ReportServices.LogoffResponse> LogoffAsync() {
            Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest inValue = new Fisk.EnterpriseManageBusiness.ReportServices.LogoffRequest();
            return ((Fisk.EnterpriseManageBusiness.ReportServices.ReportExecutionServiceSoap)(this)).LogoffAsync(inValue);
        }
    }
}
